RAND(3) Linux 程序员手册 RAND(3)

姓名
rand, rand_r, srand - 伪随机数生成器

概要
#include <stdlib.h>

int 兰特（无效）；

int rand_r(无符号 int *seedp);

void srand(无符号整型种子);

glibc 的功能测试宏要求（请参阅 feature_test_macros(7)）：

兰特_r（）：
从 glibc 2.24 开始：
_POSIX_C_SOURCE >= 199506L
Glibc 2.23 及更早版本
_POSIX_C_SOURCE

描述
rand() 函数返回 0 到 RAND_MAX 范围内的伪随机整数（即数学范围
[0，RAND_MAX]）。

srand() 函数将其参数设置为要返回的新伪随机整数序列的种子
兰特（）。通过使用相同的种子值调用 srand() 可以重复这些序列。

如果未提供种子值，则 rand() 函数会自动使用值 1 进行种子设定。

函数 rand() 不可重入，因为它使用每次调用时都会修改的隐藏状态。这可能只是
下一次调用将使用的种子值，或者可能是更复杂的值。为了获得可重现的行为
在线程应用程序中，必须明确此状态；这可以使用可重入函数 rand_r() 来完成。

与 rand() 类似，rand_r() 返回 [0, RAND_MAX] 范围内的伪随机整数。Seedp 参数是一个指向
unsigned int 用于存储调用之间的状态。如果用相同的初始值调用 rand_r()
ger 由 Seedp 指向，并且该值在调用之间不会修改，那么将产生相同的伪随机序列。

rand_r() 的 Seedp 参数指向的值仅提供非常少量的状态，因此该函数将
是一个弱伪随机生成器。请尝试 drand48_r(3)。

返回值
rand() 和 rand_r() 函数返回 0 到 RAND_MAX（含）之间的值。srand() 函数返回 no
价值。

属性
有关本节中使用的术语的解释，请参阅 attribute(7)。

┌──────────────────────────┬────────────────┬────── ────┐
│接口 │属性 │值 │
├──────────────────────────┼────────────────┼────── ────┤
│rand(), rand_r(), srand() │ 线程安全 │ MT 安全 │
└──────────────────────────┴────────────────┴────── ────┘
符合
函数 rand() 和 srand() 符合 SVr4、4.3BSD、C89、C99、POSIX.1-2001。函数 rand_r() 来自
POSIX.1-2001。POSIX.1-2008 将 rand_r() 标记为过时。

笔记
Linux C 库中的 rand() 和 srand() 版本使用与 random(3) 和 sran 相同的随机数生成器。
dom(3)，因此低阶位应该与高阶位一样随机。然而，在较旧的 rand() 实现上，
并且在不同系统上的当前实现中，低阶位比高阶位的随机性要低得多
位。当需要良好的随机性时，请勿在便携式应用程序中使用此功能。（使用随机（3）
反而。）

例子
POSIX.1-2001 给出了 rand() 和 srand() 实现的以下示例，当需要时可能有用
两台不同机器上的相同序列。

静态无符号长下一个= 1；

/* RAND_MAX 假设为 32767 */
int myrand(void) {
下一个 = 下一个 * 1103515245 + 12345；
返回（（无符号）（下一个/65536）％32768）；
}

void mysrand(无符号整数种子) {
下一个=种子；
}

以下程序可用于显示给定特定种子时由 rand() 生成的伪随机序列。

#include <stdlib.h>
#include <stdio.h>

整数
main(int argc, char *argv[])
{
int r，nloops；
无符号整型种子；

if (argc != 3) {
fprintf(stderr, "用法: %s <seed> <nloops>\n", argv[0]);
退出（EXIT_FAILURE）；
}

种子 = atoi(argv[1]);
nloops = atoi(argv[2]);

srand（种子）；
for (int j = 0; j < nloops; j++) {
r = 兰特();
printf("%d\n", r);
}

退出（EXIT_SUCCESS）；
}

也可以看看
drand48(3), 随机(3)

版画
本页是 Linux 手册页项目 5.10 版的一部分。项目描述、有关重新设计的信息
移植错误以及本页面的最新版本可以在 https://www.kernel.org/doc/man-pages/ 找到。

2020-11-01 兰德(3)
